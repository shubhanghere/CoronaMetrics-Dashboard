<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='classic' />
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='PerCountryCases (PerCountrydeath&amp;cases)' inline='true' name='federated.0ijuibf0tsctag12pmn1f0rl9axz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PerCountrydeath&amp;cases' name='excel-direct.1dox8eb1mmpo151a0aajo1mn7rh4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Corona/Tableu/PerCountrydeath&amp;cases.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1dox8eb1mmpo151a0aajo1mn7rh4' name='PerCountryCases' table='[PerCountryCases$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
            <column datatype='date' name='DateReported' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='NewDeaths' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1dox8eb1mmpo151a0aajo1mn7rh4' name='PerCountryCases' table='[PerCountryCases$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
            <column datatype='date' name='DateReported' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='NewDeaths' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PerCountryCases]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateReported</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DateReported]</local-name>
            <parent-name>[PerCountryCases]</parent-name>
            <remote-alias>DateReported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PerCountryCases_4B6DD3AB9B7F4D4580BEB10E061FD289]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[PerCountryCases]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PerCountryCases_4B6DD3AB9B7F4D4580BEB10E061FD289]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[PerCountryCases]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PerCountryCases_4B6DD3AB9B7F4D4580BEB10E061FD289]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[PerCountryCases]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PerCountryCases_4B6DD3AB9B7F4D4580BEB10E061FD289]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Reported' datatype='date' name='[DateReported]' role='dimension' type='ordinal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='PerCountryCases' datatype='table' name='[__tableau_internal_object_id__].[PerCountryCases_4B6DD3AB9B7F4D4580BEB10E061FD289]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Saint Barth√©lemy&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Northern Mariana Islands (Commonwealth of the)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sint Eustatius&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;C√¥te d‚ÄôIvoire&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bonaire&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cura√ßao&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Kosovo[1]&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;The United Kingdom&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Pitcairn Islands&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Saba&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;R√©union&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='PerCountryCases' id='PerCountryCases_4B6DD3AB9B7F4D4580BEB10E061FD289'>
            <properties context=''>
              <relation connection='excel-direct.1dox8eb1mmpo151a0aajo1mn7rh4' name='PerCountryCases' table='[PerCountryCases$]' type='table'>
                <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='DateReported' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='NewDeaths' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (GlobalPerDay)' inline='true' name='federated.1jk4y2k1x7c66z12d02xx1p6yc3n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GlobalPerDay' name='excel-direct.14m1vqp0k6t1q71erdkwl1frssfh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Corona/Tableu/GlobalPerDay.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.14m1vqp0k6t1q71erdkwl1frssfh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B856:no:A1:B856:0' header='yes' outcome='6'>
            <column datatype='integer' name='SUM(New_cases)' ordinal='0' />
            <column datatype='date' name='Date_reported' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.14m1vqp0k6t1q71erdkwl1frssfh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B856:no:A1:B856:0' header='yes' outcome='6'>
            <column datatype='integer' name='SUM(New_cases)' ordinal='0' />
            <column datatype='date' name='Date_reported' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B856:no:A1:B856:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(New_cases)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(New_cases)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SUM(New_cases)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1E81A5505854411B9693B84EB44C0C8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1E81A5505854411B9693B84EB44C0C8C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='SUM(New cases)' datatype='integer' name='[SUM(New_cases)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1E81A5505854411B9693B84EB44C0C8C]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1E81A5505854411B9693B84EB44C0C8C'>
            <properties context=''>
              <relation connection='excel-direct.14m1vqp0k6t1q71erdkwl1frssfh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B856:no:A1:B856:0' header='yes' outcome='6'>
                  <column datatype='integer' name='SUM(New_cases)' ordinal='0' />
                  <column datatype='date' name='Date_reported' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='vaccineSet (vaccineSet)' inline='true' name='federated.0340jgd1q8u8af1e0824m1vm0xn8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='vaccineSet' name='excel-direct.0qlq5u30cmvxss1cf5wci1ongrta'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Corona/vaccineSet.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0qlq5u30cmvxss1cf5wci1ongrta' name='vaccineSet' table='[vaccineSet$]' type='table'>
          <columns gridOrigin='A1:C201:no:A1:C201:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='fully_vaccinated' ordinal='1' />
            <column datatype='integer' name='Total_population' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0qlq5u30cmvxss1cf5wci1ongrta' name='vaccineSet' table='[vaccineSet$]' type='table'>
          <columns gridOrigin='A1:C201:no:A1:C201:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='fully_vaccinated' ordinal='1' />
            <column datatype='integer' name='Total_population' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[vaccineSet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C201:no:A1:C201:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[vaccineSet]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vaccineSet_1D7D4DF5E56B403A97A938ECF6415990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fully_vaccinated]</local-name>
            <parent-name>[vaccineSet]</parent-name>
            <remote-alias>fully_vaccinated</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vaccineSet_1D7D4DF5E56B403A97A938ECF6415990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_population]</local-name>
            <parent-name>[vaccineSet]</parent-name>
            <remote-alias>Total_population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vaccineSet_1D7D4DF5E56B403A97A938ECF6415990]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0340jgd1q8u8af1e0824m1vm0xn8].[sum:fully_vaccinated:qk]&quot;' value='PercentPopualtionVaccination' />
        </aliases>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Total population' datatype='integer' name='[Total_population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='vaccineSet' datatype='table' name='[__tableau_internal_object_id__].[vaccineSet_1D7D4DF5E56B403A97A938ECF6415990]' role='measure' type='quantitative' />
      <column caption='Fully Vaccinated' datatype='real' name='[fully_vaccinated]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[fully_vaccinated]' derivation='Sum' name='[sum:fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Micronesia, Fed Sts&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Congo, Dem Rep&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Iran, Islamic Rep&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Egypt, Arab Rep&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;St Lucia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Congo, Rep&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Korea, Rep&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;St Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Yemen, Rep&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;St Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='vaccineSet' id='vaccineSet_1D7D4DF5E56B403A97A938ECF6415990'>
            <properties context=''>
              <relation connection='excel-direct.0qlq5u30cmvxss1cf5wci1ongrta' name='vaccineSet' table='[vaccineSet$]' type='table'>
                <columns gridOrigin='A1:C201:no:A1:C201:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='fully_vaccinated' ordinal='1' />
                  <column datatype='integer' name='Total_population' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Map)' inline='true' name='federated.0lzc0081h6hlm81duw9op0zbho29' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Map' name='excel-direct.1dhxx5j1cx3xt3158toej1k6jljf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Map.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1dhxx5j1cx3xt3158toej1k6jljf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Cumulative_cases' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1dhxx5j1cx3xt3158toej1k6jljf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Cumulative_cases' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10001:no:A1:C10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A12D6A51C4974417B8A7FA64A0F31DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A12D6A51C4974417B8A7FA64A0F31DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A12D6A51C4974417B8A7FA64A0F31DAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A12D6A51C4974417B8A7FA64A0F31DAA]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A12D6A51C4974417B8A7FA64A0F31DAA'>
            <properties context=''>
              <relation connection='excel-direct.1dhxx5j1cx3xt3158toej1k6jljf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C10001:no:A1:C10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Global Number)' inline='true' name='federated.06bj3pu1oydasm1gjhx6d13e9afr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Number' name='excel-direct.0bz58k91x7gduw12jzp06083ph05'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Corona/Tableu/Global Number.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bz58k91x7gduw12jzp06083ph05' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='TotalCases' ordinal='0' />
            <column datatype='integer' name='TotalDeath' ordinal='1' />
            <column datatype='real' name='TotalDeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bz58k91x7gduw12jzp06083ph05' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='TotalCases' ordinal='0' />
            <column datatype='integer' name='TotalDeath' ordinal='1' />
            <column datatype='real' name='TotalDeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2BC181A08EA74E7B95A1A4B46E3409DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeath]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeath</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2BC181A08EA74E7B95A1A4B46E3409DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalDeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2BC181A08EA74E7B95A1A4B46E3409DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Death Percentage' datatype='real' name='[TotalDeathPercentage]' role='measure' type='quantitative' />
      <column caption='Total Death' datatype='integer' name='[TotalDeath]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2BC181A08EA74E7B95A1A4B46E3409DE]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2BC181A08EA74E7B95A1A4B46E3409DE'>
            <properties context=''>
              <relation connection='excel-direct.0bz58k91x7gduw12jzp06083ph05' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='TotalCases' ordinal='0' />
                  <column datatype='integer' name='TotalDeath' ordinal='1' />
                  <column datatype='real' name='TotalDeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CASE AND DEATH'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#405dff' fontsize='12'>Cases By Country EachDay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PerCountryCases (PerCountrydeath&amp;cases)' name='federated.0ijuibf0tsctag12pmn1f0rl9axz' />
          </datasources>
          <datasource-dependencies datasource='federated.0ijuibf0tsctag12pmn1f0rl9axz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Reported' datatype='date' name='[DateReported]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DateReported]' derivation='Day-Trunc' name='[tdy:DateReported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ijuibf0tsctag12pmn1f0rl9axz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]' value='76' />
            <format attr='title' class='0' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[tdy:DateReported:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]' scope='rows' value='false' />
            <format attr='tick-color' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]' value='#ff5500' />
            <format attr='height' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[tdy:DateReported:qk]' value='28' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[tdy:DateReported:qk]' value='#e6e6e6' />
            <format attr='background-color' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f9f9' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]' value='11' />
            <format attr='font-weight' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]' value='bold' />
            <format attr='font-size' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[tdy:DateReported:qk]' value='11' />
            <format attr='font-weight' field='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[tdy:DateReported:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[none:Country:nk]' />
              <lod column='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewDeaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ijuibf0tsctag12pmn1f0rl9axz].[sum:NewCases:qk]</rows>
        <cols>[federated.0ijuibf0tsctag12pmn1f0rl9axz].[tdy:DateReported:qk]</cols>
      </table>
      <simple-id uuid='{B77F27B2-94EF-4EFF-A4FC-9D8EA6B60BC5}' />
    </worksheet>
    <worksheet name='GlobalPerDay'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#405dff' fontsize='14'>Global Cases PerDay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (GlobalPerDay)' name='federated.1jk4y2k1x7c66z12d02xx1p6yc3n' />
          </datasources>
          <datasource-dependencies datasource='federated.1jk4y2k1x7c66z12d02xx1p6yc3n'>
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column caption='SUM(New cases)' datatype='integer' name='[SUM(New_cases)]' role='measure' type='quantitative' />
            <column-instance column='[SUM(New_cases)]' derivation='Sum' name='[sum:SUM(New_cases):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date_reported]' derivation='Week-Trunc' name='[twk:Date_reported:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]' value='64' />
            <format attr='display' class='0' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[twk:Date_reported:qk]' value='27' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-orientation' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]' value='0' />
            <format attr='text-align' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]' value='left' />
            <format attr='vertical-align' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]' value='top' />
            <format attr='wrap' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]' value='off' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]' value='0' />
            <format attr='width' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[twk:Date_reported:qk]' value='90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[twk:Date_reported:qk]' value='0' />
            <format attr='text-align' field='[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[twk:Date_reported:qk]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
                <format attr='vertical-align' value='bottom' />
                <format attr='wrap' value='off' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.46077346801757812' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]</rows>
        <cols>[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[twk:Date_reported:qk]</cols>
      </table>
      <simple-id uuid='{A54DBE5C-3053-473E-BC50-1A1F77E6AF25}' />
    </worksheet>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Map)' name='federated.0lzc0081h6hlm81duw9op0zbho29' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lzc0081h6hlm81duw9op0zbho29'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
            <column-instance column='[Cumulative_cases]' derivation='Median' name='[med:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date_reported]' derivation='Month-Trunc' name='[tmn:Date_reported:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lzc0081h6hlm81duw9op0zbho29].[Longitude (generated)]' field-type='quantitative' max='43056168.440778039' min='-46526216.846995279' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lzc0081h6hlm81duw9op0zbho29].[Latitude (generated)]' field-type='quantitative' max='44663583.927322187' min='-26071021.220295615' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0lzc0081h6hlm81duw9op0zbho29].[none:Country:nk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-size' scope='cols' value='24' />
            <format attr='font-size' field='[federated.0lzc0081h6hlm81duw9op0zbho29].[none:Country:nk]' value='28' />
            <format attr='font-weight' field='[federated.0lzc0081h6hlm81duw9op0zbho29].[none:Country:nk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]' field-type='quantitative' max-size='1' min-size='0.00814154' type='quantsize' />
            <encoding attr='color' field='[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]' max='8063741.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffffff</color>
                <color>#fafafa</color>
                <color>#f5f5f5</color>
                <color>#f0f0f0</color>
                <color>#ebebeb</color>
                <color>#e6e6e6</color>
                <color>#e2e2e2</color>
                <color>#dddddd</color>
                <color>#d8d8d8</color>
                <color>#d3d3d3</color>
                <color>#cecece</color>
                <color>#cacaca</color>
                <color>#c2c8cd</color>
                <color>#bac6d1</color>
                <color>#b2c4d4</color>
                <color>#aac2d8</color>
                <color>#a1bfdc</color>
                <color>#97bddf</color>
                <color>#8dbae3</color>
                <color>#83b7e7</color>
                <color>#79b3ea</color>
                <color>#6eb0ee</color>
                <color>#63adf2</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.23000000417232513' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='true' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]' />
              <lod column='[federated.0lzc0081h6hlm81duw9op0zbho29].[none:Country:nk]' />
              <size column='[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1974033117294312' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#1b1b1b' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lzc0081h6hlm81duw9op0zbho29].[Latitude (generated)]</rows>
        <cols>[federated.0lzc0081h6hlm81duw9op0zbho29].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0lzc0081h6hlm81duw9op0zbho29].[tmn:Date_reported:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{8562390D-144C-4AD8-9D5C-09E1AA2130BD}' />
    </worksheet>
    <worksheet name='Vaccination'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vaccineSet (vaccineSet)' name='federated.0340jgd1q8u8af1e0824m1vm0xn8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0340jgd1q8u8af1e0824m1vm0xn8'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total population' datatype='integer' name='[Total_population]' role='measure' type='quantitative' />
            <column caption='Fully Vaccinated' datatype='real' name='[fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total_population]' derivation='Sum' name='[sum:Total_population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fully_vaccinated]' derivation='Sum' name='[sum:fully_vaccinated:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0340jgd1q8u8af1e0824m1vm0xn8].[sum:fully_vaccinated:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0340jgd1q8u8af1e0824m1vm0xn8].[sum:Total_population:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[sum:fully_vaccinated:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[none:Country:nk]</column>
            <column>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[:Measure Names]' value='322' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='text-align' field='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[Multiple Values]' value='center' />
            <format attr='text-format' field='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[Multiple Values]' value='N' />
            <format attr='color' value='#1b1b1b' />
            <format attr='color' field='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[Multiple Values]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[none:Country:nk]' value='80' />
            <format attr='background-color' value='#c0c0c0' />
            <format attr='background-color' field='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[Multiple Values]' value='#f5f5f5' />
            <format attr='background-color' data-class='subtotal' value='#f5f5f5' />
            <format attr='background-color' scope='rows' value='#f5f5f5' />
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' scope='rows' value='#f5f5f5' />
            <format attr='background-color' scope='cols' value='#f5f5f5' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#f5f5f5' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[sum:Total_population:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f5f5' />
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' scope='rows' value='#f5f5f5' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[none:Country:nk]</rows>
        <cols>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EFF5E1A9-83BC-4CA9-9958-3DE43A0C555A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='33906' id='3' name='CASE AND DEATH' show-title='false' w='48408' x='66' y='15120' />
        <zone forceUpdate='true' h='16037' id='6' type-v2='text' w='24085' x='133' y='-1031'>
          <formatted-text>
            <run bold='true' fontname='Tableau Semibold' fontsize='22'>Confirmed Cases </run>
            <run>√Ü&#10;</run>
            <run bold='true' fontname='Tableau Semibold' fontsize='22'>√Ü </run>
            <run bold='true' fontcolor='#405dff' fontname='Tableau Semibold' fontsize='22'>510.3M</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5c4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='14548' id='7' type-v2='text' w='25133' x='23342' y='229'>
          <formatted-text>
            <run bold='true' fontsize='22'>Confirm Death </run>
            <run>√Ü&#10;</run>
            <run bold='true' fontcolor='#405dff' fontsize='22'>62,34,079</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone h='73196' id='8' name='MAP' show-title='false' w='53626' x='48436' y='-229' />
        <zone h='26919' id='9' name='GlobalPerDay' show-title='false' w='99934' x='0' y='72967' />
        <zone h='23826' id='10' name='Vaccination' show-title='false' w='47347' x='995' y='48797'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5155' id='11' type-v2='text' w='16711' x='36870' y='72967'>
          <formatted-text>
            <run bold='true' fontcolor='#405dff' fontname='Comic Sans MS' fontsize='14'>Global PerWeek</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98168' id='18' param='vert' type-v2='layout-flow' w='98938' x='531' y='916'>
                <zone forceUpdate='true' h='16037' id='6' type-v2='text' w='24085' x='133' y='-1031'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Semibold' fontsize='22'>Confirmed Cases </run>
                    <run>√Ü&#10;</run>
                    <run bold='true' fontname='Tableau Semibold' fontsize='22'>√Ü </run>
                    <run bold='true' fontcolor='#405dff' fontname='Tableau Semibold' fontsize='22'>510.3M</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5c4' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73196' id='8' is-fixed='true' name='MAP' show-title='false' w='53626' x='48436' y='-229'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='14548' id='7' type-v2='text' w='25133' x='23342' y='229'>
                  <formatted-text>
                    <run bold='true' fontsize='22'>Confirm Death </run>
                    <run>√Ü&#10;</run>
                    <run bold='true' fontcolor='#405dff' fontsize='22'>62,34,079</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone fixed-size='271' h='33906' id='3' is-fixed='true' name='CASE AND DEATH' show-title='false' w='48408' x='66' y='15120'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='191' h='23826' id='10' is-fixed='true' name='Vaccination' show-title='false' w='47347' x='995' y='48797'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone fixed-size='215' h='26919' id='9' is-fixed='true' name='GlobalPerDay' show-title='false' w='99934' x='0' y='72967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5155' id='11' type-v2='text' w='16711' x='36870' y='72967'>
                  <formatted-text>
                    <run bold='true' fontcolor='#405dff' fontname='Comic Sans MS' fontsize='14'>Global PerWeek</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BFA4896E-0160-40DC-AF48-9B88F549E2E7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='141'>
    <window class='worksheet' name='CASE AND DEATH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[none:Country:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0ijuibf0tsctag12pmn1f0rl9axz].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ijuibf0tsctag12pmn1f0rl9axz].[:Measure Names]</field>
            <field>[federated.0ijuibf0tsctag12pmn1f0rl9axz].[none:Country:nk]</field>
            <field>[federated.0ijuibf0tsctag12pmn1f0rl9axz].[yr:DateReported:ok]</field>
            <field>[federated.0rx9tyr0ujtoeh19c56gk06tljwi].[yr:DateReported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07716F4B-9F37-4AFC-88F8-45AE59473E22}' />
    </window>
    <window class='worksheet' name='GlobalPerDay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[sum:SUM(New_cases):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1jk4y2k1x7c66z12d02xx1p6yc3n].[yr:Date_reported:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14E56B0A-B4A6-493F-A26C-418F6CDE4474}' />
    </window>
    <window class='worksheet' name='Vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0340jgd1q8u8af1e0824m1vm0xn8].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[:Measure Names]</field>
            <field>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[none:Country:nk]</field>
            <field>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[sum:Total_population:qk]</field>
            <field>[federated.0340jgd1q8u8af1e0824m1vm0xn8].[sum:fully_vaccinated:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D7A44C3-44F7-4A11-82C8-95D05B5FFD7D}' />
    </window>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-05-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]</field>
            <field>[federated.0lzc0081h6hlm81duw9op0zbho29].[none:Country:nk]</field>
            <field>[federated.0lzc0081h6hlm81duw9op0zbho29].[yr:Date_reported:ok]</field>
            <field>[federated.0rx9tyr0ujtoeh19c56gk06tljwi].[none:Country:nk]</field>
            <field>[federated.14z2d1u0x8za421ftb4hg14dy904].[none:location:nk]</field>
            <field>[federated.1talcyx0bt9tfh1gieql21bbd15v].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7D0B866F-812A-46E1-BBA1-FBA399132D4B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='CASE AND DEATH'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GlobalPerDay'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MAP'>
          <current-page>
            <multibucket>
              <bucket>#2022-05-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0lzc0081h6hlm81duw9op0zbho29].[med:Cumulative_cases:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Vaccination' />
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{ABBCAD34-BD1B-42A8-BBA7-53D77B38D8AF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CASE AND DEATH' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      4zZ/S4IEM+VMhkDxHsKfIMGcklCABO9oEgqQ4B1NQgESvKOZ5AU6vgwuQYILGUmSuOSSS6io
      qDj9uT09PSIt7dz3AUiQ4EJEk5aWRk7O6Vd2JUhwMZKwARK8o0koQIJZZ2wUnn8DTA5oa4HO
      E6ImRAzeODj9dSMW2Nf21mf3GPz1FTjSBSdLSDjYD2YnCBkONI+f19kJDt/05wsBL7zx1ueE
      AiSYVYJe+PpPARU0dkFXN/RYIRyCAQtEAvDaIeg3Q3Q8oQh2B9hdYB+Gw91vldXRAj0OeP5v
      0GAClwuGRsZfdscYDJhh2Ap/eB0aj8C234As4Fe/B1kCpxMsjvGX3u+DfgsI4OU948dGXSdZ
      D5AgwdmyYyesXA/JGhjzQTgC6VH45o9BSLBmDfR2///27h+0qisO4Pgnea/5U0lCxGgaF0kb
      m0SJD2PFlg6GQqFDi6U4dHDTKeqW0UFcRBB0EAQX/6CWUOgiToIIhRYHDRakf2xTSorVhGeS
      xufLy3v3ObwEWuds5/dZ75+z3C/ncOGey+Qtsg2M9fPN9xQXGP/i//cqvWJpicUyKwucuEzp
      Xw4d5NwV+ro5+BV//Eb+OW1Vfvmd/Baqzzl1ncUiE8e5dJVshc8OUKty7QYrm2IGCOvszxla
      8GyO7+7S1MxCkXoHhz/nyV8MDDJxhOIMd37g6BF6O8i98TSWyvRuYWKc0jOKS+z9kOE+Rgqc
      PMbu99mcZ2qWL/dx4SYHPuXBIxZLjH1C0wueztM/yEdDlOe595iPCxFAWGeFndx/yI8/cfhr
      ejro20r+JWcn2b+H6V+ZOMNggdFhzl/k7zleVOj6zzf0ra3s2sE73WwfYOMGpp/wcJqNnfRs
      pqudkXf5YJTRIZbzjG5j5xCd7fz8mHls7WbuH+5Nse09To/z7W2aZmdn6/EaNKyXep3yMs05
      Wt6inqGJrNZY87e1NI5ndd5e3THxVZl8jtzqgnxtJshWr137PV2l0tiRsL21cWztVw61Khny
      zVRqtK5uRbpcaYzT1tI4Z7naGLOWNcbIsgggJC6WQCFpEUBIWgQQkhYBhKRFACFpEUBIWgQQ
      khYBhKRFACFpEUBIWgQQkhYBhKRFACFpEUBIWgQQkhYBhKRFACFpEUBIWgQQkhYBhKRFACFp
      EUBIWgQQkvYaKITXbQyZDxwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GlobalPerDay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAANi0lEQVR4nO3d629UZ2LH8e/cPLbHBtuxDTG2IZtAaFqtFKldbZpKUbXqm/4ZfduuFG37
      ouqrfdFKrdQq292ku2mkrrrppoSQ7BKSsFwcAQkGA+ZiDMZge3yZ8Rhfztzvc87pCxNTllsw
      Yw/28/u8AY7POc8zw3w95pkzjOfWrVvu1q1bETGRf+vWrXR0dNR6HiI14a31BERqSQGI0RSA
      GE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjR
      FIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0B
      iNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAY
      TQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEU
      gBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI
      0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhN
      AYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSA
      GE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjR
      FIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAbDqD
      o7NcuhkD4O/fPU4mX3rovgpANp3rkwuMTC8CEI4lcByXmfkkS6n8ffsqADHCgRMjDI7O3rdd
      AYjRFIBsGu8dGuS2lXmiYxSAbBqXxubIFsqP3KdcsekbnFj5swKQqvn09CifnBqp9TQeqVS2
      +fnBCyt/VgDyVDL5Ej9658jK7x+15PgsUgDyWMlMgdGZxQd+zXFcogvpdZ5R9SgAeayxqMX7
      R4ZqPY01oQDkod7af4bb8XtXVX78yxPki5VHHhdPFzg8MLaWU1vxxdlb/Ozjc6s69sSlSQUg
      D3djeolCyb5n23B4HsdxSGWLzMezDzwuns5zqH90Pab4VI4PTigAk+WLFf51Xz8AHxy7ysRs
      nOnbSX709pHHHnv2eoRfH7u61lN8qH19w4xFrac+jwIw0LufDnLy8hS24zBwPQrAtcl5EpkC
      juuSKz56Lf1ZcH1ygXj6/mt7npQCMMgvDl6gUKqQLZQolR/9c3y19A1OMDR+uyrnKlVs0rli
      Vc71DQVgkC8vhilX7MfvWEXXJxeJLKSqcq5LN2P824dnqnKubyiATS6ykGJ2ceOu0681BbDJ
      9Q2GOXllqtbTeGYpAFkXo9OL/PLw5VUd+8nJEc6NRKs8o2UKQNZFKlckPBtf1bEzCymsB7yb
      qxoUwCb1n58OPvSFKrlLAWxS3+ba+GfZ5FyCf3ivb83HUQCy7n7y0Vkuj8098GvxdJ5wLE7F
      Xr7cYq0pgE0ktpRhvAqXB6y1RKZAsXTvC3H/+KtTTN9OMjOf4vTVmXWbiwLYRC7enF23qzCr
      oX94hg+OL19PNGdlKK3zi3SgADaF4xcmiFbp1db1lMoWWUjkajoHf01Hl6o4eXmSlub6Wk9j
      Q9IzwAYwu5jmF3feyP32J+c4dmGccyNR/un9UzWe2canAGogkS48dIUjky/x1kdngeXv7Keu
      TJEtlLk2uQBAxXZwHBfHdanYzrrNebNSAGvswugsfYNhAP72naPEltIcOHmdoxfGAfirfz5I
      oVThnd+co394hnLF5vydl/2n51PMzG+8n+03EgWwRv7lg9OMTC0QmU+tvHMpmS1gO+49+8XT
      BQAy+TKl8vqvgphOAVTR4Ogs7346CCy/oKMH9LNPq0BVcOLSJDs6tpArlllK1nZZT56MngFW
      aTKW4KcfDwBw/sYsM/PJGs9IVkPPAE/o8tgcdX4fsHzBlmxsegb4FnKFMocHbgFw8WaM4fB8
      jWck1aIAfo/rLn+cjuu6nL8R5ci5MTL5Evv6rtV6arIGjA9gIZHFth1uWxku35rDcV3+5ieH
      cRyX2FKGiVn9mLOZbYoAcoUyhd+7vDaTL1Eq2ziOSyKzvNZ+8WaMZKZAbCnDvr5hAP7uP46x
      mMozFrX47MzNdZ+71NaGDuB/jg6RyhZ5/+gQhwfGcF2Xv37rCyq2w08/HmDgegQrleeH/34Y
      gF8fGyK6mCaZLXD2eqTGs5dnwYYLYGj8NgN3Hrx9F8P3ve0vspDCdd0HHSpynw0XwK3IElcn
      tAoj1eFPp9P4fL5az+Ox3v7kHH/5/d14KgUCbhHLsmhrgEw6QR1FPBUvlmXR2eQlHo/T6K1Q
      KWZJpQI81wCWZbGlzqGQTePxetgadLEsi+caIZNKUC5kafRViFvxlXO45Tx1FEmnErQ1Lp/D
      7xbx2g6FXJotdQ6WZVHvLWMXs3gqXhp8FSzLoilgU8xloJInwN35ZtNJApTwVLgzXw+JeJwG
      b3l5vskE7SEPlmXhcwp4PR7ymRQtweWxgp4yTilHOV+h0WdjWRahgE0pn1mer6eEZVm01Lvk
      Mkn8TgGv7cOyLNpDHpKJBPWeMnYpRzIRp6PJc2e+DsV8hpynTGv98txaG1yy6SSlfIEm//JY
      HSEviUQCp5Sj3lsimYzfna9dAMcll0nRcuf+DXpKuKUcpbxDKHBnvv4K5UIWp1wk+M18g8vH
      FUoVfE7xzm2+ew6nnKNcsAn5K/fe5lLhvnP4nCI+PHdvczJOvbeEU8qRSCToCC0/Vpr8Np7x
      8XG3paWFqakpdu7cSTqdplwu09bWtrItGo2ybds2/H7/yrZvfnVdl5mZGXp7e1e2pVIpbNum
      tbV1ZVskEmF8fJw33njjvnMAq96WzWbJ5/O0t7evbJubm6O1tZVgMMjU1BSRSITu7u6nHqtY
      LBKPx9m+ffvKtoWFBUKhEI2NjffsH4lEeP311+87Rz6fJ51O09nZubJtfn6e5uZmGhoanuq+
      OXr0KK+++iq5XI6dO3dSLpdZWFigq6trZb+lpSWCwSBNTU1V+3uIRCK89tprRKNRenp6Vr6W
      TC4vJ///x9fMzAw7duzA6/Xed17btonFYnR3d3+rMR90/z7oNluWRSAQoLm5+b79PeFw2G1t
      bV3D7913LS4u0t7evi5j1XrcWoyZTqcJBALU16/vu8M28v27rgGIPGt8b7755o8bGhqqdsLF
      2DTHvvySzt7dWONnOHJunB1dz5PNZLhy4Wt89VtpbGzAKec5c+oEUSvF0PlzzCcL9HZvX8WI
      DkMXBrgyNk16fprZeJ7tne3Y2UX++8BhvvvKblLJFK7XRzGXxvUGsOamOdJ3klIhw8DAObZ0
      9NDcWPfEI4dvXmFwOEwsPMLl4Vt8Z89LVLIxrlyO8VxnC3Yly6lTZ3nhhW4Gz/QzOh1l7NoQ
      YzPzvPRC75PfVLvIJx/+im0vfpevP3sfb+crtDZ6OXHsMOHJMFm7jlAdJJZiTMwm2fbcFoYu
      DnD11hTR8RGGRifZ/dJ38HiefOjbMxN83neSvXtexuvNcebUdbZsqcPj95NNJ3HwEfD7uDF0
      kbNDN6izE5y/EuXFF7qefDBg+NIAl0fCxMZHuHgjzN7dL/LZ/76Hr/NlYleOMJpqotlXxh/w
      k85kqQsGuTF0nvNXx6mz05wZHmP3rp7HjlP1VaC2ju00NQQJ+DzYpTwVG7763UH+6+c/49pE
      lOnwNfovjuEPNLCtow03s0Drnu+RT86uckQvPT1d1Pl9DF8ZYTo8geO6DF+5Smu9h5GRS3xx
      5AzH+vo4sP83VGyH9m1dhOrriMwn+bPvvczM7OpWlV7YsxefXSSXy5GIhUkVwXVsFsYG6R+d
      58Tp0+RyecBPd/d2fHYBT1s33vwq/8tCX5A9u3Zg42Pvnp2UbRfIUnG28Oc/+AumbvRz7KsB
      5mPTTEdvg8dLT3cX/kCQnDdAq9emuMq3KDQ3N1MpVXA9AC6FXJb+Lw9z8NAxDhw6xOGjyx+r
      1NPbTV0gwK49e/A/xYdw9HR3EwjUkcmkyWYyuC40PtfJ5PVB5uZuk82lOX5wH7/9/HOOfHUZ
      F+ju6SEQCND70it43W/3ecVVD6C/73NS5QB2pYLHV8effP9PaW9r5Y9f/wFdbfUk4klCTY2k
      58McPT1ES8fzRK/207Dl+dUNWCmw78AhmkLNbO/qxHZscGF6boGdPZ1cG7pGLpOiLlhP5/Ye
      QvUBTv3uIEUCtDX4+frCTbqf71j17fV6vez9g7209+6lJQg3b4yy/eWXmbp6lmSmhNfrhVKK
      /b89ypbWTjLRMdyG0KrH83i9eACPx3vnO3mISnmeE18eZ1vXi5TzWQKNLTjlIq5dYt+BgzSF
      QjiZBAnHT3CVC36Li4vUe30UbYfJ0VG8wTKzyQJ+x2XHrpeou/MEuv/D/TSFmnDc5ftmtfbv
      309jUxMVDwRcD2XAV9dIQ3GR9l1/SDI6Rt4bomLb9O7sxeep8NGHHxNqWr5vfd9y7E3/b4DM
      4gSTi/X80d7VPRXL5vZ/3oCLInvJLbMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
      VjbB/U6mAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccination' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
